# Pipelines are made of one or more jobs and may include resources and variables.
# Jobs are made of one or more steps plus some job-specific data. Steps can be
# tasks, scripts, or references to external templates.

jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-16.04'
    strategy:
      maxParallel: 2
      matrix: 
        py36:
          PY_VERSION: 3.6
        py27:
          PY_VERSION: 2.7
    steps:
        # NOTE: On Linux, there is no write permission in the miniconda installation,
        # and the CondaEnvironment@1 does not honor a prefix. Therefore we can *not*
        # use the conda that comes with Azure as we do on Windows. This is also
        # documented in the following issue: https://github.com/Microsoft/vsts-tasks/issues/8299
        # Therefore we need to create our own conda environment from scratch.
      - task: CondaEnvironment@1
        inputs:
          updateConda: false
      - script: |
          echo "Will create the conda environment" || exit 1
          conda create --quiet --yes --mkdir --prefix $AGENT_WORKFOLDER/envs/vigra --channel conda-forge python=$(PY_VERSION) || exit 1
          echo "Will activate the conda environment" || exit 1
          source $CONDA/bin/activate $AGENT_WORKFOLDER/envs/vigra || exit 1
          echo "Will start the conda install of prerequisites" || exit 1
          conda install --quiet --yes --mkdir --channel conda-forge jpeg libpng libtiff hdf5 fftw boost boost-cpp numpy nose || exit 1
          mkdir build || exit 1
          cd build || exit 1
          echo "Will start the cmake configuration" || exit 1
          cmake .. -DTEST_VIGRANUMPY=1 -DDEPENDENCY_SEARCH_PREFIX="$CONDA_PREFIX" -DCMAKE_PREFIX_PATH="$CONDA_PREFIX" || exit 1
          echo "Will start the cmake based build" || exit 1
          cmake --build . --target check --config Release || exit 1
          echo "Completed script successfully" || exit 1
  - job: macOS
    pool:
      vmImage: 'xcode9-macos10.13'
    strategy:
      maxParallel: 2
      matrix: 
        py36:
          PY_VERSION: 3.6
        py27:
          PY_VERSION: 2.7
    steps:
      # This build is practially identical to the Linux build above.
      - task: CondaEnvironment@1
        inputs:
          updateConda: false
      - script: |
          echo "Will create the conda environment" || exit 1
          conda create --quiet --yes --mkdir --prefix $AGENT_WORKFOLDER/envs/vigra --channel conda-forge python=$(PY_VERSION) || exit 1
          echo "Will activate the conda environment" || exit 1
          source $CONDA/bin/activate $AGENT_WORKFOLDER/envs/vigra || exit 1
          echo "Will start the conda install of prerequisites" || exit 1
          conda install --quiet --yes --mkdir --channel conda-forge jpeg libpng libtiff hdf5 fftw boost boost-cpp numpy nose || exit 1
          mkdir build || exit 1
          cd build || exit 1
          echo "Will start the cmake configuration" || exit 1
          cmake .. -DTEST_VIGRANUMPY=1 -DDEPENDENCY_SEARCH_PREFIX="$CONDA_PREFIX" -DCMAKE_PREFIX_PATH="$CONDA_PREFIX" || exit 1
          echo "Will start the cmake based build" || exit 1
          cmake --build . --target check --config Release || exit 1
          echo "Completed script successfully" || exit 1
  - job: Windows
    pool:
      vmImage: 'vs2017-win2016'
    strategy:
      maxParallel: 2
      matrix: 
        py36:
          PY_VERSION: 3.6
        py27:
          PY_VERSION: 2.7
    steps:
        # NOTE: On Windows, calling conda activate from the script fails. After calling
        # 'activate %AGENT_WORKFOLDER%\envs\vigra' the pipeline would end prematurely
        # without error message. Therefore we need to use the conda that comes with Azure.
        # So the following setup steps work on Linux and MacOS, but as of 2018.09 do *not*
        # work on Windows:
        #  echo "Will create the conda environment" || exit 1
        #  conda create --quiet --yes --mkdir --prefix %AGENT_WORKFOLDER%\envs\vigra --channel conda-forge python=$(PY_VERSION) || exit 1
        #  echo "Will activate the conda environment" || exit 1
        #  activate %AGENT_WORKFOLDER%\envs\vigra || exit 1
      - task: CondaEnvironment@1
        inputs:
          createCustomEnvironment: true
          environmentName: 'vigra'
          packageSpecs: 'python=$(PY_VERSION)'
          updateConda: true
      - script: |
          echo "Will start the conda install of prerequisites" || exit 1
          conda install --quiet --yes --mkdir --channel conda-forge jpeg libpng libtiff hdf5 fftw boost boost-cpp numpy nose || exit 1
          mkdir build || exit 1
          cd build || exit 1
          echo "Will start the cmake configuration" || exit 1
          cmake .. -DTEST_VIGRANUMPY=1 -DDEPENDENCY_SEARCH_PREFIX="%CONDA_PREFIX%\Library" -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library" -DCMAKE_GENERATOR_PLATFORM="x64" || exit 1
          echo "Will start the cmake based build" || exit 1
          cmake --build . --target check --config Release || exit 1
          echo "Completed script successfully" || exit 1

